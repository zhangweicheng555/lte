<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boot.kaizen.dao.SysProjectDao">

	
	<select id="query" resultMap="SysProjectQMap">
		 select * from sys_project sp order by sp.sort
	</select>
	
	
	<select id="findWithRoleRealtion" resultMap="SysProjectQMap">
		 select distinct p.* 
		 from 
		 sys_project p left join  proj_role_relation r on  p.id=r.proj_id 
		 where 1=1 
		 <if test="projId != null and projId != ''">
            and p.id=#{projId}
        </if>
		 <if test="projName != null and projName != ''">
            and p.proj_name like '%${projName}%'
        </if>
		 order by p.sort asc
	</select>
	
	<select id="queryProjects" resultType="java.util.Map">
		  select distinct 
		  p.id as "id"
		  ,p.proj_name as "projName"
		 from 
		 sys_project p
		 ,proj_role_relation pr
		 ,sys_role r
		 ,sys_role_user ru
		 ,sys_user u
		 
		 where 
		 p.id=pr.proj_id
		 and pr.role_id=r.id
		 and r.id=ru.roleId
		 and u.id=ru.userId
		 
		 and u.username=#{username}
		 
	</select>
	
	<select id="findRandomProj" resultType="java.lang.Long">
		 select distinct p.id
		 from 
		 sys_project p
		 ,proj_role_relation pr
		 ,sys_role r
		 ,sys_role_user ru
		 ,sys_user u
		 where 
		 p.id=pr.proj_id
		 and pr.role_id=r.id
		 and r.id=ru.roleId
		 and u.id=ru.userId
		 and u.username=#{username}
		<!--  order by p.createTime desc -->
		 limit 1
	</select>
	
	<delete id="delete">
		 delete from sys_project
		 where id != 9 and id in
		 <foreach collection="idsArray" index="index" item="item"
            open="(" separator="," close=")">
            #{item}
        </foreach>
	</delete>
	
	
	
	<select id="find" resultMap="SysProjectFMap">
		 select 
		 sp.id,sp.proj_name,sp.proj_code,sp.proj_intro,sp.sort,sp.createTime,sp.updateTime,spm.projName as "project_mapper_name",sp.proj_province 
		 ,group_concat(distinct sr.id separator '、')  as roleIds
		 ,group_concat(distinct sr.name separator '、')   as roleNames
		 from 
		 sys_project sp
		 left join proj_role_relation prr 
		 on sp.id=prr.proj_id
		 left join sys_role sr
		 on sr.id=prr.role_id
		 
		 left join sys_project_mapper spm
		 on spm.id=sp.proj_intro
		 
		 where 1=1 
		 <if test="map.projId != null and map.projId != ''">
            and sp.id=#{map.projId}
        </if>
		 <if test="map.projName != null and map.projName != ''">
            and sp.proj_name like '%${map.projName}%'
        </if>
		 <if test="map.projCode != null and map.projCode != ''">
            and sp.proj_code like '%${map.projCode}%'
        </if>
        
		 <if test="map.projIntroModel != null and map.projIntroModel != ''">
            and sp.proj_intro = #{map.projIntroModel}
        </if>
        
		 <if test="map.projCodeModel != null and map.projNameModel != ''">
            and ( sp.proj_code = #{map.projCodeModel} or   sp.proj_name = #{map.projNameModel} )
        </if>
		
		 group by sp.id,sp.proj_name,sp.proj_code,sp.proj_intro,sp.sort,sp.createTime,sp.updateTime,spm.projName
		 order by sp.sort
	</select>
	
	
	<select id="findList" resultMap="SysProjectFMap">
		 select * 
		 from  
		 sys_project sp 
		 where  1=1
		 <if test="projId != null">
            and sp.id =#{projId}
        </if>
		 order by sp.sort
	</select>
	
	
	<select id="selectById" parameterType="java.lang.Long" resultMap="SysProjectQMap">
		 select * 
		 from  
		 sys_project sp 
		 where  id=#{id}
	</select>
	
	
	
	
	<resultMap type="com.boot.kaizen.model.SysProject" id="SysProjectQMap">
		<id property="id" column="id" />
		<result property="projName" column="proj_name" />
		<result property="projCode" column="proj_code" />
		<result property="projIntro" column="proj_intro" />
		<result property="proProvice" column="proj_province" />
		<result property="sort" column="sort" />
		<result property="createTime" column="createTime" />
		<result property="updateTime" column="updateTime" />
		<collection property="roles" column="id" ofType="com.boot.kaizen.model.SysRole" select="com.boot.kaizen.dao.SysRoleDao.queryByProId" />
	</resultMap>
	
	<resultMap type="com.boot.kaizen.model.SysProject" id="SysProjectFMap">
		<id property="id" column="id" />
		<result property="projName" column="proj_name" />
		<result property="projCode" column="proj_code" />
		<result property="proProvice" column="proj_province" />
		<result property="projIntro" column="proj_intro" />
		<result property="projectMapperName" column="project_mapper_name" />
		<result property="sort" column="sort" />
		<result property="roleIds" column="roleIds" />
		<result property="roleNames" column="roleNames" />
		<result property="createTime" column="createTime" />
		<result property="updateTime" column="updateTime" />
	</resultMap>

	
</mapper>